@model ClientMVC.Models.UserShow

@{
    ViewBag.Title = "Profile";
}

<div class="row">
    <div class="col-md-4">
        @if (Model.User.ProfilePicture != null)
        {
            <img src="@Model.User.ProfilePicture"
                 style="margin-top: 3vh; max-width: 20vw" />
        }
        else
        {
            <img src="~/Content/Images/profile_placeholder.png" style="margin-top: 3vh; max-width: 20vw" />
        }
    </div>

    <div class="col-md-8">
        <div class="row">
            <h2 class="mr-2">@Model.User.Username <span class="text-muted" id="full-name">(@Model.User.FirstName @Model.User.LastName)</span></h2>
            @if ((int)Session["ID"] == Model.User.ID)
            {
                <form action="~/user/edit/@Model.User.ID" method="get">
                    <button type="submit" class="btn btn-primary">Edit your profile</button>
                </form>
            }
        </div>
        <div style="max-height: 30vh; overflow-y: scroll;">
            @Model.User.Description
        </div>
    </div>
</div>

@if ((int)Session["ID"] == Model.User.ID)
{
    <form class="form-inline mt-1" action="~/user/savefile/@Model.User.ID"
          method="post" enctype="multipart/form-data">
        <button type="submit" class="btn-sm btn-primary mr-2">Upload</button>
        <input type="file" name="file" />
        <input type="hidden" name="type" value="profilePicture" />
    </form>
}

<div class="row">
    <div class="col-md-9">

        <div class="row" style="margin-top: 3vh">
            <div class="col-md-6">
                <div class="row">
                    <h4 class="mr-2">Home location</h4>
                    <form action="~/user/savelocation" method="post">
                        <input type="hidden" name="id" value="@Model.User.ID" />
                        <input type="hidden" name="lng" id="marker-lng" value=@(Model.User.Location != null ? Model.User.Location.Longitude : 0) />
                        <input type="hidden" name="lat" id="marker-lat" value=@(Model.User.Location != null ? Model.User.Location.Latitude : 0) />
                        @if ((int)Session["ID"] == Model.User.ID)
                        {
                            <button type="submit" id="save-location" class="btn-sm btn-secondary" disabled><i class="fas fa-map-marked-alt"></i> Update your location</button>
                        }
                    </form>
                    @if (Model.User.Location == null)
                    {
                        <p> You have to set your location to see other users.</p>
                    }
                </div>

                <div id="map"></div>
            </div>

            <div class="col-md-6">
                <div>
                    <h4>Skills</h4>

                    @if (Model.User.Skills.Count() == 0)
                    {
                        <p>No skills found.</p>
                    }
                    else
                    {
                        <ul>
                            @foreach (var item in Model.User.Skills)
                            {
                                <li>@item.Name</li>
                            }
                        </ul>
                    }
                    <p>
                        <select>
                            @foreach (var item in Model.Skills)
                            {
                                <option value="name">@item.Name</option>
                            }
                        </select>
                        <input type="button" class="btn btn-success" value="Add skills" />
                        <input type="button" class="btn btn-danger" value="Remove skills" />
                    </p>
                </div>
            </div>
        </div>

        @if ((int)Session["ID"] == Model.User.ID)
        {
            <div class="row" style="margin-top: 3vh">
                <div class="col-md-6">
                    <div>
                        <h4>Invitations</h4>
                        <table class="table-striped">
                            <tr>
                                <td>Hello</td>
                            </tr>
                            <tr>
                                <td>Hej</td>
                            </tr>
                            <tr>
                                <td>Hellojsa</td>
                            </tr>
                        </table>
                    </div>
                </div>

                <div class="col-md-6">
                    <div>
                        <h4>Applications</h4>
                        <table class="table-striped">
                            <tr>
                                <td>Hello</td>
                            </tr>
                            <tr>
                                <td>Hej</td>
                            </tr>
                            <tr>
                                <td>Hellojsa</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        }
        <div class="col-md-3">
            <div>
                <h4 class="mr-2">Music</h4>
                @if ((int)Session["ID"] == Model.User.ID)
                {
                    <form action="~/user/savefile/@Model.User.ID"
                          method="post" enctype="multipart/form-data">
                        <input type="file" name="file" />
                        <input type="hidden" name="type" value="music" />
                        <button type="submit" class="btn-sm btn-primary mt-1"><i class="fas fa-plus"></i> Add music</button>
                    </form>
                }
                <div style="overflow-y: scroll; overflow-x: hidden">
                    @if (Model.Music.Count == 0)
                    {
                        <p>No music found.</p>
                    }
                    @foreach (var file in Model.Music)
                    {
                        <div class="row">
                            <audio controls class="mt-2 w-75">
                                <source src="@file.Name" class="mt-2" />
                                Your browser does not support this audio format.
                            </audio>

                            @if ((int)Session["ID"] == Model.User.ID)
                            {
                                <form class="float-right" action="~/user/deletefile" method="post" onsubmit="return deleteFileClicked();">
                                    <input type="hidden" name="userID" value="@Model.User.ID" />
                                    <input type="hidden" name="fileID" value="@file.ID" />
                                    <input type="hidden" name="fileName" value="@file.Name" />
                                    <button type="submit" class="btn text-danger"><i class="fas fa-window-close"></i></button>
                                </form>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row" style="margin-top: 3vh">
    <div class="col-md-12">
        <div class="row">
            <h4 class="mr-2">Gallery</h4>
            @if ((int)Session["ID"] == Model.User.ID)
            {
                <form action="~/user/savefile/@Model.User.ID"
                      method="post" enctype="multipart/form-data">
                    <button type="submit" class="btn-sm btn-primary mr-2"><i class="fas fa-plus"></i> Add photo</button>
                    <input type="file" name="file" />
                    <input type="hidden" name="type" value="image" />
                </form>
            }
        </div>
        <div>
            @{
                Html.RenderPartial("_Gallery", Model);
            }
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <div class="delete-form">
            @if ((int)Session["ID"] == Model.User.ID)
            {
                using (Html.BeginForm("Delete/" + Model.User.ID, "User", FormMethod.Get, new { onsubmit = "return deleteClicked();" }))
                {
                    <input type="submit" class="btn btn-danger" value="Delete your account" />
                }
            }
        </div>
    </div>
</div>

@section styles {
    <style>
        .skill-list {
            display: inline-block;
            border: 1px solid #000;
            padding: 20px;
        }

        .delete-form {
            margin-left: 37.5%;
            width: 50%;
            margin-top: 10vh
        }

        audio {
            width: 100%;
            height: 20px;
        }

        #map {
            height: 40vh;
            width: 100%;
        }
    </style>
}

<p></p>

@using (Html.BeginForm("Delete/" + Model.User.ID, "User", FormMethod.Get, new { onsubmit = "return deleteClicked();" }))
{
    <input type="submit" class="btn btn-danger" value="Delete your account" />
}

@section styles {
    <style>
        .skill-list {
            display: inline-block;
            border: 1px solid #000;
            padding: 20px;
        }
    </style>
}

@section scripts{
    <script src="~/Scripts/map.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@System.Configuration.ConfigurationManager.AppSettings["GoogleMapsAPI"]&callback=initMarkerMap"></script>

    <script type="text/javascript">
        var formDelete = document.getElementById('form-delete');

        var lat = parseFloat(document.getElementById('marker-lat').value);
        var lng = parseFloat(document.getElementById('marker-lng').value);

        if (lat) {
            mapCenter.lat = lat;
            mapCenter.lng = lng;

            createMarkerInCenter();
        }

        if (@Session["ID"] != @Model.User.ID)
        {
            disableMap();
        }

        function deleteClicked() {
            if (confirm('Are you sure you want to permanently delete your account?')) {
                return true;
            }
            return false;
        }

        function deleteFileClicked() {
            if (confirm('Are you sure you want to remove this file?')) {
                return true;
            }
            return false;
        }
    </script>
}